update.packages(ask='graphics',checkBuilt=TRUE)
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
#Script for analyzing data for IA ED study
#Michael Faneros, Spring 2015
library(xlsx)
library(psych)
library(data.table)
library(xlsx)
q()
library("swirl")
install.packages("swirl")
wd()
getwd()
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", key = "3a1af5488c0e34b5ca6b", secret = "9d2d2025cdf6569b731e4ec7e5b786dd5be5cf66")
githum_token <- oauth2.0_token(oauth_endpoints("githum"), myapp)
myapp <- oauth_app("github",
key = "3a1af5488c0e34b5ca6b",
secret = "9d2d2025cdf6569b731e4ec7e5b786dd5be5cf66")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "3a1af5488c0e34b5ca6b",
secret = "9d2d2025cdf6569b731e4ec7e5b786dd5be5cf66")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
setwd("~/GitHub/datasciencecoursera/GettingCleaningData")
file.download("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", w2q2.csv)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "w2q2.csv")
acs <- read.csv("w1q2.csv")
getwd()
list.files()
acs <- read.csv("w2q2.csv")
sqldf("select * from acs")
library(sqldf)
sqldf("select * from acs")
sqldf("select pwgtp1 from acs where AGEP < 50")
head(sqldf("select distinct AGEP from acs"))
head(sqldf("select unique AGEP from acs"))
head(acs$AGEP)
con = url("http://biostat.jhsph.edu/~jleek/contact.html ")
htmlCode = readLines(con)
close(con)
htmlCode
sApply(X=c(10,20,30,100), nchar(htmlCade[X]))
sapply(X=c(10,20,30,100), nchar(htmlCade[X]))
sapply(X=c(10,20,30,100), nchar(htmlCode[X]))
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
temp <- read.fwf("getdata-wksst8110.for", widths=c(9,4,4,4,4,4,4,4,4), skip = 4, header = FALSE)
temp
head(temp)
temp <- read.fwf("getdata-wksst8110.for", widths=c(10,4,4,4,4,4,4,4,4), skip = 4, header = FALSE)
head(temp)
temp <- read.fwf("getdata-wksst8110.for", widths=c(10,9,4,9,4,9,4,9,4), skip = 4, header = FALSE)
head(temp)
sum(temp$v4)
colSum(temp)
colsum(temp)
colSums(temp)
colSums(temp[4])
apply(temp, 2 mean)
apply(temp, 2, mean)
temp2 <- as.numeric(temp)
library(datasets)
data(iris)
str(iris)
length(iris$Sepal.Length)
head(isir[,Sepal.Length])
head(isir$Sepal.Length)
head(iris[,Sepal.Length])
head(iris)
sapply(iris, mean
)
mean(iris[Species=="virginica"])
isir$Species
iris$Species
mean(iris[Species=="virginica"])
tapply(iris,iris$Species, mean)
nrow(iris)
length(iris$Species)
head(iris)
length(iris$Sepal.Length)
length(iris$Sepal.Width)
length(iris$Petal.Length)
length(iris$Petal.Width)
tapply(iris$Sepal.Length,iris$Species, mean)
apply(iris, 2, mean)
apply(iris[,1:4],2,mean)
apply(iris,1,mean)
colMeans(iris)
data(mtcars)
?mtcars
carsdf <- data.frame(mtcars)
str(mtcars)
abs(mean(mtcars[cyl==4,mpg])-mean(mtcars[cyl==8,mpg]))
abs(mean(mtcars[cyl==4,1])-mean(mtcars[cyl==8,1]))
abs(mean(mtcars["cyl"==4,1])-mean(mtcars["cyl"==8,1]))
tapply(mtcars$mpg,mtcars$cyl, mean)
carsdf <- data.table(carsdf)
library(data.table)
carsdf <- data.table(carsdf)
abs(mean(carsdf[cyl==4,mpg])-mean(carsdf[cyl==8,mpg]))
abs(mean(carsdf[cyl==4,hp])-mean(carsdf[cyl==8,hp]))
apply(iris,2,mean)
apply(iris,2,mean, rm.na=TRUE)
tapply(iris$Sepal.Length,iris$Species,mean)
setwd("~/GitHub/datasciencecoursera/R_Programming/ProgAssignment2")
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
temp <- makeVector(5)
temp
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(temp)
temp <- makeVector(c(1:5))
cachemean(temp)
cachemean(temp)
